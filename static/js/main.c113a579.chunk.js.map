{"version":3,"sources":["drag.js","App.js","index.js"],"names":["getPageXY","event","targetTouches","length","x","pageX","y","pageY","noDefault","preventDefault","setTrackedEvents","actions","drag","drop","body","document","type","move","end","addEventListener","passive","removeEventListener","App","dragMe","offset","cancelTracking","dragRef","useRef","style","left","top","flashDiv","checkForDrag","triggerDelta","timeOut","trigger2","isNaN","Math","abs","Promise","resolve","reject","startX","startY","options","deltaX","deltaY","cancel","setTimeout","detectMovement","then","getBoundingClientRect","startDrag","catch","useEffect","current","classList","add","remove","className","onMouseDown","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c113a579.chunk.js","sourcesContent":["// https://gist.github.com/blackslate/6f77d3acd2edc2a286cff6d607cf3ce8\n\n\n\n export const getPageXY = (event) => {\n  if (event.targetTouches && event.targetTouches.length) {\n    event = event.targetTouches[0] || {}\n  }\n\n  return { x: event.pageX, y: event.pageY }\n}\n\n\n\nexport const getXY = (event, frame) => {\n  if ([\"client\", \"page\", \"offset\"].indexOf(frame) < 0) {\n    frame = \"client\"\n  }\n  if (event.targetTouches && event.targetTouches.length) {\n    event = event.targetTouches[0] || {}\n  }\n\n  return { x: event[frame + \"X\"], y: event[frame + \"Y\"] }\n}\n\n\n\n/**\n * Returns a promise which will be:\n * * resolved if the mouse or touch moves more than triggerDelta\n *   pixels in any direction\n * * rejected if the mouse is released or the touch gesture ends before\n *   moving that far, or if <timeOut> number of milliseconds elapses\n *   before any movement occurs.\n *\n * @param  {event}  event should be a mousedown or touchstart event\n * @param  {number} triggerDelta should be the number of pixels of\n *                          movement that will resolve the promise\n * @param  {number} timeOut may be a number of milliseconds. Defaults\n *                          to 150. Use 0 for no timeOut rejection.\n *\n * @return  {promise}\n */\nexport const detectMovement = (event, triggerDelta, timeOut) => {\n  const trigger2 = triggerDelta * triggerDelta\n  timeOut = isNaN(timeOut) ? 150 : Math.abs(timeOut)\n\n  function movementDetected(resolve, reject) {\n    const { x: startX, y: startY } = getPageXY(event)\n    const options = { event, drag, drop }\n    const cancel = setTrackedEvents(options)\n    // { actions: { move: <\"touchmove\" | \"mousemove\">\n    //              end:  <\"toucheend\" | \"mouseup\">\n    // , drag: function\n    // , drop: function\n    // }\n\n    // Check if the mouse/touch has moved more than triggerDelta\n    // pixels in any direction, and resolve promise if so.\n    function drag(event) {\n      const { x, y } = getPageXY(event)\n      const deltaX = startX - x\n      const deltaY = startY - y\n      const delta2 = (deltaX * deltaX + deltaY * deltaY)\n\n      if (delta2 > trigger2) {\n        setTrackedEvents(cancel)\n        resolve()\n      }\n    }\n\n    // Reject promise if the mouse is released before the mouse/touch\n    // moved triggerDelta pixels in any direction.\n    function drop() {\n      setTrackedEvents(cancel)\n      reject()\n    }\n\n    if (timeOut) {\n      setTimeout(drop, timeOut)\n    }\n  }\n\n  return new Promise(movementDetected)\n}\n\n\n// The prevent default function needs to be outside setTrackedEvents\n// so that the exact same function (rather than a duplicate). It\n// doesn't need to be exported\nconst noDefault = (event) => event.preventDefault()\n\n\nexport const setTrackedEvents = ({ actions, event, drag, drop }) => {\n  // Omit event to cancel tracking\n  const body = document.body\n  const dragOption = { passive: false } // capture is false by default\n\n  if (event) {\n    if (typeof actions !== \"object\") {\n      actions = {}\n    }\n\n    if (event.type === \"touchstart\") {\n      actions.move  = \"touchmove\"\n      actions.end   = \"touchend\"\n    } else {\n      actions.move  = \"mousemove\"\n      actions.end   = \"mouseup\"\n    }\n\n    body.addEventListener(actions.move, drag, false)\n    body.addEventListener(actions.end, drop, false)\n    // Prevent the page scrolling during drag, on touch devices\n    document.addEventListener(\"touchstart\", noDefault, dragOption)\n\n  } else {\n    body.removeEventListener(actions.move, drag, false)\n    body.removeEventListener(actions.end, drop, false)\n    // Restore page scrolling on touch devices now that drag is over\n    document.removeEventListener(\"touchstart\", noDefault)\n  }\n\n  return { actions, drag, drop }\n}","import React, { useEffect, useRef } from 'react'\nimport './App.css';\n\nimport {\n    detectMovement\n  , setTrackedEvents\n  , getPageXY\n} from './drag'\n\n\nfunction App() {\n  const dragRef = useRef()\n\n  let dragMe\n    , offset\n    , cancelTracking\n\n\n  const drag = (event) => {\n    const { x, y } = getPageXY(event)\n\n    dragMe.style.left = (offset.x + x )+ \"px\"\n    dragMe.style.top =  (offset.y + y )+ \"px\"\n  }\n\n\n  const drop = () => {\n    setTrackedEvents(cancelTracking)\n    dragMe.style = {}\n    flashDiv()\n  }\n\n\n  const startDrag = (event) => {\n    const { x, y } = getPageXY(event)\n\n    const { left, top } = dragMe.getBoundingClientRect()\n    offset = { x: left - x, y: top - y }\n\n    const options = {\n      event\n    , drag\n    , drop\n    }\n\n    cancelTracking = setTrackedEvents(options)\n  }\n\n\n  const checkForDrag = (event) => {\n    event.preventDefault()\n\n    detectMovement(event, 16)\n    .then(\n      () => startDrag(event)\n     )\n    .catch(flashDiv)\n  }\n\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    dragMe = dragRef.current\n    dragMe.addEventListener(\"touchstart\", checkForDrag, false)\n  })\n\n\n  const flashDiv = () => {\n    dragMe.classList.add(\"flash\")\n    setTimeout(() => dragMe.classList.remove(\"flash\"), 200)\n  }\n\n\n  return (\n    <main>\n      <div className=\"red\"></div>\n      <div className=\"green\"></div>\n      <div className=\"blue\"></div>\n\n      <div\n        className=\"draggable unselectable\"\n        onMouseDown={checkForDrag}\n        ref={dragRef}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}